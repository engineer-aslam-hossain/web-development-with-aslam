{"version":3,"sources":["fakaData.js","components/Course/Course.js","components/CourseFee/CourseFee.js","App.js","serviceWorker.js","index.js"],"names":["Courses","title","id","fee","img","Course","props","className","course","src","alt","onClick","enrollHandler","CourseFee","totalFee","courseAmount","reduce","total","App","useState","SetCourseAmount","updateAmount","length","map","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gTA6FeA,G,YA7FC,CACd,CACEC,MAAO,6BACPC,GAAI,EACJC,IAAK,IACLC,IAAK,mCAEP,CACEH,MAAO,wBACPC,GAAI,EACJC,IAAK,IACLC,IAAK,mCAEP,CACEH,MAAO,yBACPC,GAAI,EACJC,IAAK,KACLC,IAAK,mCAEP,CACEH,MAAO,yBACPC,GAAI,EACJC,IAAK,IACLC,IAAK,mCAEP,CACEH,MAAO,0BACPC,GAAI,EACJC,IAAK,IACLC,IAAK,mCAEP,CACEH,MAAO,6BACPC,GAAI,EACJC,IAAK,IACLC,IAAK,mCAEP,CACEH,MAAO,iCACPC,GAAI,EACJC,IAAK,KACLC,IAAK,mCAEP,CACEH,MAAO,wBACPC,GAAI,EACJC,IAAK,IACLC,IAAK,mCAEP,CACEH,MAAO,qBACPC,GAAI,EACJC,IAAK,IACLC,IAAK,mCAEP,CACEH,MAAO,qBACPC,GAAI,GACJC,IAAK,IACLC,IAAK,mCAEP,CACEH,MAAO,qBACPC,GAAI,GACJC,IAAK,IACLC,IAAK,mCAEP,CACEH,MAAO,sBACPC,GAAI,GACJC,IAAK,IACLC,IAAK,mCAEP,CACEH,MAAO,uBACPC,GAAI,GACJC,IAAK,IACLC,IAAK,mCAEP,CACEH,MAAO,qBACPC,GAAI,GACJC,IAAK,KACLC,IAAK,mCAEP,CACEH,MAAO,sCACPC,GAAI,GACJC,IAAK,IACLC,IAAK,qCCvEMC,G,MAhBA,SAAAC,GACb,OACE,yBAAKC,UAAU,UACb,6CAAmBD,EAAME,OAAOP,MAAhC,KACA,6BACA,yBAAKQ,IAAKH,EAAME,OAAOJ,IAAKM,IAAI,KAChC,sCAAYJ,EAAME,OAAOL,IAAzB,OACA,4BACEQ,QAAS,kBAAML,EAAMM,cAAcN,EAAME,SACzCD,UAAU,mBAFZ,iBCKSM,EAZG,SAAAP,GAChB,IAEMQ,EAFcR,EAAMS,aAEGC,QAAO,SAACC,EAAOT,GAAR,OAAmBS,EAAQT,EAAOL,MAAK,GAE3E,OACE,6BACE,uBAAGI,UAAU,4BAAb,iBAAuDO,EAAvD,SC6BSI,MA/Bf,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBACNJ,EADM,KACQK,EADR,KAGPR,EAAgB,SAAAJ,GACpB,IAAMa,EAAY,sBAAON,GAAP,CAAqBP,IACvCY,EAAgBC,IAElB,OACE,yBAAKd,UAAU,OACb,wBAAIA,UAAU,eAAd,cACa,6BADb,+BAIA,uBAAGA,UAAU,4BAAb,4BAC4BQ,EAAaO,QAEzC,kBAAC,EAAD,CAAWP,aAAcA,IAEzB,yBAAKR,UAAU,cACZP,EAAQuB,KAAI,SAAAf,GAAM,OACjB,kBAAC,EAAD,CACEgB,IAAKhB,EAAON,GACZM,OAAQA,EACRI,cAAeA,UClBPa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.913d4522.chunk.js","sourcesContent":["const Courses = [\r\n  {\r\n    title: \"Web Development with Aslam\",\r\n    id: 1,\r\n    fee: 3000,\r\n    img: \"https://i.imgur.com/e6c6xAM.jpg\",\r\n  },\r\n  {\r\n    title: \"Web Design with Aslam\",\r\n    id: 2,\r\n    fee: 2000,\r\n    img: \"https://i.imgur.com/srmp84j.jpg\",\r\n  },\r\n  {\r\n    title: \"Learn React with Aslam\",\r\n    id: 3,\r\n    fee: 3500,\r\n    img: \"https://i.imgur.com/yYxVpdw.png\",\r\n  },\r\n  {\r\n    title: \"React Hooks with Aslam\",\r\n    id: 4,\r\n    fee: 3000,\r\n    img: \"https://i.imgur.com/zSBONK7.png\",\r\n  },\r\n  {\r\n    title: \"React Native with Aslam\",\r\n    id: 5,\r\n    fee: 5000,\r\n    img: \"https://i.imgur.com/aGCWTSO.jpg\",\r\n  },\r\n  {\r\n    title: \"Vue Development with Aslam\",\r\n    id: 6,\r\n    fee: 3000,\r\n    img: \"https://i.imgur.com/3J8aADo.png\",\r\n  },\r\n  {\r\n    title: \"Angular Development with Aslam\",\r\n    id: 7,\r\n    fee: 3500,\r\n    img: \"https://i.imgur.com/m6ZTANm.jpg\",\r\n  },\r\n  {\r\n    title: \"Express js with Aslam\",\r\n    id: 8,\r\n    fee: 500,\r\n    img: \"https://i.imgur.com/H7SxABI.jpg\",\r\n  },\r\n  {\r\n    title: \"Node js with Aslam\",\r\n    id: 9,\r\n    fee: 3000,\r\n    img: \"https://i.imgur.com/TDp1dJI.jpg\",\r\n  },\r\n  {\r\n    title: \"Next js with Aslam\",\r\n    id: 10,\r\n    fee: 3000,\r\n    img: \"https://i.imgur.com/oWYABR6.jpg\",\r\n  },\r\n  {\r\n    title: \"GraphQl with Aslam\",\r\n    id: 11,\r\n    fee: 1000,\r\n    img: \"https://i.imgur.com/m60TpFl.jpg\",\r\n  },\r\n  {\r\n    title: \"MongoDb  with Aslam\",\r\n    id: 12,\r\n    fee: 1000,\r\n    img: \"https://i.imgur.com/Jj02oYP.jpg\",\r\n  },\r\n  {\r\n    title: \"Gatsby js with Aslam\",\r\n    id: 13,\r\n    fee: 3000,\r\n    img: \"https://i.imgur.com/y92Q2kw.jpg\",\r\n  },\r\n  {\r\n    title: \"Nuxt js with Aslam\",\r\n    id: 14,\r\n    fee: 3500,\r\n    img: \"https://i.imgur.com/hcGF84O.png\",\r\n  },\r\n  {\r\n    title: \"Complete Web Development with Aslam\",\r\n    id: 15,\r\n    fee: 3000,\r\n    img: \"https://i.imgur.com/UBcibKw.png\",\r\n  },\r\n];\r\n\r\nexport default Courses;\r\n","import React from \"react\";\r\nimport \"./Course.css\";\r\nconst Course = props => {\r\n  return (\r\n    <div className='course'>\r\n      <h4>Course Name : {props.course.title} </h4>\r\n      <hr />\r\n      <img src={props.course.img} alt='' />\r\n      <p>Price : {props.course.fee} tk</p>\r\n      <button\r\n        onClick={() => props.enrollHandler(props.course)}\r\n        className='btn btn-primary'>\r\n        Enroll Now\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Course;\r\n","import React from \"react\";\r\n\r\nconst CourseFee = props => {\r\n  const totalCourse = props.courseAmount;\r\n\r\n  const totalFee = totalCourse.reduce((total, course) => total + course.fee, 0);\r\n\r\n  return (\r\n    <div>\r\n      <p className='text-center text-warning'>Total Price : {totalFee} tk</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseFee;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport Courses from \"./fakaData\";\r\nimport Course from \"../src/components/Course/Course\";\r\nimport CourseFee from \"./components/CourseFee/CourseFee\";\r\n\r\nfunction App() {\r\n  const [courseAmount, SetCourseAmount] = useState([]);\r\n\r\n  const enrollHandler = course => {\r\n    const updateAmount = [...courseAmount, course];\r\n    SetCourseAmount(updateAmount);\r\n  };\r\n  return (\r\n    <div className='App'>\r\n      <h1 className='text-center'>\r\n        Welcome To <br /> Web Development with Aslam\r\n      </h1>\r\n\r\n      <p className='text-center text-warning'>\r\n        Course Purchase Amount : {courseAmount.length}\r\n      </p>\r\n      <CourseFee courseAmount={courseAmount} />\r\n\r\n      <div className='courseList'>\r\n        {Courses.map(course => (\r\n          <Course\r\n            key={course.id}\r\n            course={course}\r\n            enrollHandler={enrollHandler}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}